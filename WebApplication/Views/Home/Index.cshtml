@{
    ViewBag.Title = "Tank Monitoring";
}
<style>

    .status-header-area {
        height : 70px;
        width : 100%;
    }
    .status-bar-fixed {
        margin : 0 auto;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 750px;
        height: 100px;
        background-color : #BAE691;
        border-bottom-left-radius : 10px;
        border-bottom-right-radius : 10px;
    }

    .history-display-header {
        text-align : center;
    }

    .history-body-area {
        margin-top : 20px;
        width : 100%;
    }

    .history-display {
        margin : 0 auto;
        width : 650px;
        height : 540px;
        background-color : #FAE9DF;

    }

    .history-body-area {
        border-top-left-radius : 15px;
        border-top-right-radius : 15px;
    }

    .history-display-header {
        position : relative;
        width : 100%;
        height : 10%;
        background-color : #A9A5A1;
    }

    .status-indicator {
        padding : 10px;
    }

    .chart-display-area {
        position : relative;
        width : 100%;
        height : 80%;
    }

    .chart-container {
        margin: 15px auto;
    }
    .chart-toggle-buttons {
        margin : 0 auto;
    }

    .add-table-bar {
        position : relative;
        width : 100%;
        height : 10%;
        background-color : #E7D7CD;
        border-bottom-left-radius : 15px;
        border-bottom-right-radius : 15px;
    }   
    .labeled-image {
        height : 100%;
    }

    .img-label {
        height : 20%;
    }
    .img-display {
        height : 80%;
    }
    .add-table-bar {
        vertical-align : central;
        text-align : center;
    }
    .status-info {
        font-size : 0.7em;
        margin : 10px;
        padding : 10px;
        background-color : #F6F6F6;
        -moz-box-shadow:    inset 0 0 10px #000000;
        -webkit-box-shadow: inset 0 0 10px #000000;
        box-shadow:         inset 0 0 10px #000000;
        border-radius : 4px;
        text-align : center;
    }
    .chart-container {
        padding : 20px;
        background-color : #F6F6F6;
        border : 1px solid #D3CBC4;
        vertical-align : middle;
    }

    .chart-canvas {
       width: 80%;
       margin: 15px auto; 
    }

    .ch-toggle-btn {
	box-shadow:inset 0px 1px 0px 0px #ffffff;
	background:linear-gradient(to bottom, #ededed 5%, #dfdfdf 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ededed', endColorstr='#dfdfdf',GradientType=0);
	background-color:#ededed;
	border-radius:3px;
	border:1px solid #dcdcdc;
	display:inline-block;
	cursor:pointer;
	color:#777777;
	font-family:Arial;
	font-size:0.8em;
	font-weight:bold;
	padding:6px 24px;
	text-decoration:none;
	text-shadow:0px 1px 0px #ffffff;
}
.ch-toggle-btn:hover {
	background:linear-gradient(to bottom, #dfdfdf 5%, #ededed 100%);
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#dfdfdf', endColorstr='#ededed',GradientType=0);
	background-color:#dfdfdf;
}
.ch-toggle-btn:active {
	position:relative;
	top:1px;
}
.button-container {
    padding : 10px;
}
.sm-img {
  display: block;
  max-width:278px;
  max-height:95px;
  width: auto;
  height: auto;
}


</style>

<div class="status-header-area">
    <div class="status-bar-fixed flex flex-row">
        <div class="status-indicator">
            <div class="labeled-image flex flex-column">
                 <img class="sm-img" src="~/Images/ConcernIndicators/danger-indicator.png" />
            </div>
        </div>
        <div class="status-info status-bp flex-item-scale">
            <h4> Barometric Pressure </h4>
            
                @if (ViewBag.RecentReading != null)
                {
                    <p>
                        @ViewBag.RecentReading[0].ToString()
                    </p>
                }   
        </div>
        <div class="status-info status-temperature flex-item-scale">
             <h4> Temperature </h4>
            @if (ViewBag.RecentReading != null)
            {
                <p>
                    @ViewBag.RecentReading[1].ToString()
                </p>
            }
        </div>
        <div class="status-info status-conductivity flex-item-scale">
            <h4> Conductivity </h4>
            @if (ViewBag.RecentReading != null)
            {
                <p>
                    @ViewBag.RecentReading[2].ToString()
                </p>
            }
        </div>
        <div class="status-info status-colorimeter flex-item-scale">
            <h4> Colorimeter </h4>
            @if (ViewBag.RecentReading != null)
            {
                <p>
                    @ViewBag.RecentReading[3].ToString()
                </p>
            }
        </div>
        <div class="status-info status-ph flex-item-scale">
             <h4> PH Level </h4>
            @if (ViewBag.RecentReading != null)
            {
                <p>
                    @ViewBag.RecentReading[4].ToString()
                </p>
            }
        </div>
    </div>
</div>
<div class="history-body-area">
    <div class="history-display">
        <div class="history-display-header"><h1> A1 </h1></div>
        <div class="chart-display-area">
            <div id="chart" class="chart-container flex flex-column">
                <canvas class="chart-canvas" id="myChart"></canvas>
                <div class="button-container">
                    <div class="chart-toggle-buttons flex flex-row">
                        <div id="bp-toggle" class="ch-toggle-btn flex-item-scale"> BP </div>
                        <div id="temp-toggle" class="ch-toggle-btn flex-item-scale"> Temperature </div>
                        <div id="conduct-toggle" class="ch-toggle-btn flex-item-scale"> Conductivity </div>
                        <div id="color-toggle" class="ch-toggle-btn flex-item-scale"> Colorometer </div>
                        <div id="ph-toggle" class="ch-toggle-btn flex-item-scale"> PH </div>
                    </div>
                    <div class="chart-toggle-buttons flex flex-row">
                        <div id="display-all-btn" class="ch-toggle-btn flex-item-scale"> Display All </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="add-table-bar">
            <h1> Display Table </h1>
        </div>
    </div>
</div>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.bundle.min.js"></script>
<script>
    var ID = null;
    var chartData = [ [], [], [], [], [], [] ];
    var response = $.getJSON("@Url.Action("ActiveBranchAll","Tank",new {ID = ViewBag.ID }, Request.Url.Scheme)", function () {
        console.log(ID);
        var jsonResponse = response.JSONresponse;
        console.log(jsonResponse);
        var reading = null;
        jsonResponse.forEach(function (obj) {
            reading = obj.sensors;
            reading.forEach(function (sensor) {
                console.log(sensor);
                var sensorType = sensor.SensorTypeID;
                var readingData = sensor.ReadingValue;
                if (sensorType == 1) {
                    chartData[0].push(readingData);
                } else if (sensorType == 2) {
                    chartData[1].push(readingData);
                } else if (sensorType == 3) {
                    chartData[2].push(readingData);
                } else if (sensorType == 4) {
                    chartData[3].push(readingData);
                } else if (sensorType == 5) {
                    chartData[4].push(readingData);
                } else {

                };
            });
        });
    });

    // [0.1, 0.3, 0.62, .54, 0.78, 0.21, 0.7]
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ["Jan", "Feb", "Mar", "Apr", "May","Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            datasets: [{
                label: 'BP',
                data: chartData[0],
                backgroundColor: "rgba(153,255,51,0.4)"
            }, {
                label: 'Temperature',
                data: chartData[1],
                backgroundColor: "rgba(213,121,0,0.4)"
            }, {
                label: 'Conductivity',
                data: chartData[2],
                backgroundColor: "rgba(155,73,0,0.4)"
            }, {
                label: 'Colorimeter',
                data: chartData[3],
                backgroundColor: "rgba(75,64,0,0.4)"
            }, {
                label: 'PH',
                data: chartData[4],
                backgroundColor: "rgba(182,164,0,0.4)"
            }]
        }
    });
</script>